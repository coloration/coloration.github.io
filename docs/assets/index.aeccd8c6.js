import{u as a,o as s,b as t,v as p}from"./vendor.5a413b3c.js";const o={class:"mk prose prose-sm m-auto text-left"},e=p(`<h1 id="%40coloration%2Fkit" tabindex="-1">@coloration/kit</h1><nav class="table-of-contents"><ol><li><a href="#start-up">Start Up</a><ol><li><a href="#install">Install</a></li></ol></li><li><a href="#operator">Operator</a><ol><li><a href="#curry">curry</a></li><li><a href="#equal">equal</a></li><li><a href="#is">is</a></li><li><a href="#not">not</a></li><li><a href="#deepequal">deepEqual</a></li><li><a href="#identity">identity</a></li><li><a href="#noop">noop</a></li><li><a href="#no">no</a></li><li><a href="#isdefind">isDefind</a></li><li><a href="#isobject">isObject</a></li><li><a href="#isplainobject">isPlainObject</a></li><li><a href="#isstring">isString</a></li><li><a href="#isnumber">isNumber</a></li><li><a href="#issymbol">isSymbol</a></li><li><a href="#isboolean">isBoolean</a></li><li><a href="#isfunction">isFunction</a></li><li><a href="#isregexp">isRegExp</a></li><li><a href="#ispromise">isPromise</a></li><li><a href="#isprimitive">isPrimitive</a></li><li><a href="#isie">isIE</a></li><li><a href="#copy">copy</a></li><li><a href="#clone">clone</a></li></ol></li><li><a href="#array">Array</a><ol><li><a href="#toarray">toArray</a></li><li><a href="#arrayadd">arrayAdd</a></li><li><a href="#arrayincludes">arrayIncludes</a></li><li><a href="#arrayremove">arrayRemove</a></li><li><a href="#arrayrepeat">arrayRepeat</a></li><li><a href="#arraypick">arrayPick</a></li><li><a href="#arrayslice">arraySlice</a></li></ol></li><li><a href="#object">Object</a><ol><li><a href="#objecthas">objectHas</a></li><li><a href="#objectget">objectGet</a></li><li><a href="#objectgetdefaultnull">objectGetDefaultNull</a></li><li><a href="#reverseentries">reverseEntries</a></li><li><a href="#reversekeyvalue">reverseKeyValue</a></li><li><a href="#objecttoquery">objectToQuery</a></li><li><a href="#querytoobject">queryToObject</a></li><li><a href="#totree">toTree</a></li><li><a href="#flattentree">flattenTree</a></li><li><a href="#findtreeparent">findTreeParent</a></li><li><a href="#findtreeparentfromlist">findTreeParentFromList</a></li></ol></li><li><a href="#function">Function</a></li><li><a href="#number">Number</a><ol><li><a href="#formatnumber">formatNumber</a></li><li><a href="#formatnumbertothousand">formatNumberToThousand</a></li><li><a href="#formatnumberenum">FormatNumberEnum</a></li><li><a href="#softbind">softBind</a></li></ol></li><li><a href="#string">String</a><ol><li><a href="#stringlength">stringLength</a></li><li><a href="#stringbytelength">stringByteLength</a></li><li><a href="#transformletter">transformLetter</a></li><li><a href="#transformtohalfsymbol">transformToHalfSymbol</a></li><li><a href="#transformtofullsymbol">transformToFullSymbol</a></li></ol></li><li><a href="#math">Math</a><ol><li><a href="#a">a</a></li><li><a href="#c">c</a></li><li><a href="#apick">aPick</a></li><li><a href="#cpick">cPick</a></li></ol></li><li><a href="#process">Process</a><ol><li><a href="#microdelay">microDelay</a></li><li><a href="#macrodelay">macroDelay</a></li><li><a href="#delay">delay</a></li><li><a href="#debounce">debounce</a></li><li><a href="#throttle">throttle</a></li></ol></li><li><a href="#dom">DOM</a><ol><li><a href="#copytoclipboard">copyToClipBoard</a></li><li><a href="#download">download</a></li><li><a href="#downloadasfile">downloadAsFile</a></li><li><a href="#downloadascsv">downloadAsCsv</a></li><li><a href="#downloaddataurl">downloadDataurl</a></li><li><a href="#getoffset">getOffset</a></li><li><a href="#getoffsetfrombody">getOffsetFromBody</a></li></ol></li><li><a href="#const">Const</a></li></ol></nav><ul><li><a href="https://github.com/coloration/kit" target="_blank" rel="noopener">Github</a></li><li><a href="https://coloration.github.io/#/kit" target="_blank" rel="noopener">Living Document</a></li></ul><p style="display:flex;flex-wrap:wrap;grid-gap:1rem;gap:1rem;"><img style="margin:0;" src="https://img.shields.io/npm/v/@coloration/kit.svg" alt="version"><img style="margin:0;" src="https://img.shields.io/npm/l/@coloration/kit.svg" alt="lic"><img style="margin:0;" src="https://img.shields.io/npm/dm/@coloration/kit.svg" alt="Download"></p><h2 id="start-up" tabindex="-1">Start Up</h2><h3 id="install" tabindex="-1">Install</h3><pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> i @coloration/kit -S
</code></pre><h2 id="operator" tabindex="-1">Operator</h2><h3 id="curry" tabindex="-1">curry</h3><p>\u67EF\u91CC\u5316\u4E00\u4E2A\u51FD\u6570, \u5C06\u53C2\u6570\u7F13\u5B58\u8D77\u6765, \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570.\u53EA\u63A5\u53D7\u5269\u4E0B\u7684\u53C2\u6570. \u5982\u679C\u518D\u6B21\u4F20\u5165\u7684\u53C2\u6570\u4E0D\u8DB3,\u5219\u7EE7\u7EED\u8FDB\u884C\u67EF\u91CC\u5316.</p><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c <span class="token punctuation">}</span>

<span class="token keyword">const</span> add2 <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>add<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token function">add2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">/* =&gt; 10 */</span>
<span class="token keyword">const</span> add5 <span class="token operator">=</span> <span class="token function">add2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token function">add5</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">/* =&gt; 12 */</span>

</code></pre><p>Note: \u4E5F\u662F\u4E3A\u4E86\u914D\u5408\u8FD9\u4E2A\u7279\u6027, <code>kit</code> \u4E2D\u6240\u6709\u7684\u51FD\u6570\u7684\u914D\u7F6E\u51FD\u6570\u90FD\u9760\u524D, \u6570\u636E\u53C2\u6570\u90FD\u9760\u540E(\u4E0E ramda \u76F8\u540C, \u4E0Elodash\u4E0D\u540C). \u8FD9\u7B26\u5408\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u4E60\u60EF.</p><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">toTree</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">/* code */</span><span class="token punctuation">}</span>

<span class="token keyword">const</span> projectTreeFormatter <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>toTree<span class="token punctuation">,</span> treeOptions<span class="token punctuation">)</span>

<span class="token function">projectTreeFormatter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token comment">/* data array */</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><h3 id="equal" tabindex="-1">equal</h3><p>\u5224\u65AD\u4E24\u503C\u76F8\u7B49, \u5982\u679C\u6CA1\u6709\u6307\u5B9A\u5224\u65AD\u51FD\u6570\u5219\u4F7F\u7528 <code>Object.is</code> \u5224\u65AD.</p><pre class="language-js"><code class="language-js"><span class="token function">equal</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">/* =&gt; false */</span>

<span class="token keyword">const</span> customEqual <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">===</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>

<span class="token function">customEqual</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">/* =&gt; true */</span>
</code></pre><h3 id="is" tabindex="-1">is</h3><h3 id="not" tabindex="-1">not</h3><h3 id="deepequal" tabindex="-1">deepEqual</h3><h3 id="identity" tabindex="-1">identity</h3><p>\u8FD4\u56DE\u503C\u672C\u8EAB, \u53EF\u7528\u4E8E\u8FC7\u6EE4</p><pre class="language-js"><code class="language-js"><span class="token function">identity</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">/* =&gt; &#39;a&#39; */</span>

<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>identity<span class="token punctuation">)</span>
<span class="token comment">/* =&gt; [&#39;a&#39;, 3, []] */</span>
</code></pre><h3 id="noop" tabindex="-1">noop</h3><p>\u7A7A\u51FD\u6570, \u4E00\u822C\u7528\u4E8E\u4E0D\u5F97\u4E0D\u4F20\u51FD\u6570,\u53C8\u6CA1\u5FC5\u8981\u6267\u884C\u7684\u5730\u65B9.\u89C6\u60C5\u51B5\u800C\u5B9A</p><pre class="language-js"><code class="language-js"><span class="token function">fetchSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token comment">/*  */</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>noop<span class="token punctuation">)</span>
</code></pre><h3 id="no" tabindex="-1">no</h3><p>\u6C38\u8FDC\u8FD4\u56DE <code>false</code></p><h3 id="isdefind" tabindex="-1">isDefind</h3><pre class="language-ts"><code class="language-ts"><span class="token function">isDefind</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; false</span>
<span class="token function">isDefind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

<span class="token comment">// other =&gt; true</span>
</code></pre><h3 id="isobject" tabindex="-1">isObject</h3><h3 id="isplainobject" tabindex="-1">isPlainObject</h3><h3 id="isstring" tabindex="-1">isString</h3><h3 id="isnumber" tabindex="-1">isNumber</h3><h3 id="issymbol" tabindex="-1">isSymbol</h3><h3 id="isboolean" tabindex="-1">isBoolean</h3><h3 id="isfunction" tabindex="-1">isFunction</h3><h3 id="isregexp" tabindex="-1">isRegExp</h3><h3 id="ispromise" tabindex="-1">isPromise</h3><h3 id="isprimitive" tabindex="-1">isPrimitive</h3><h3 id="isie" tabindex="-1">isIE</h3><h3 id="copy" tabindex="-1">copy</h3><h3 id="clone" tabindex="-1">clone</h3><h2 id="array" tabindex="-1">Array</h2><h3 id="toarray" tabindex="-1">toArray</h3><p>transform any to array</p><pre class="language-ts"><code class="language-ts"><span class="token generic-function"><span class="token function">toArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;1&#39;, &#39;2&#39;]</span>
<span class="token generic-function"><span class="token function">toArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [5, 6] new instance</span>
<span class="token generic-function"><span class="token function">toArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [{ id: 1 }]</span>
</code></pre><h3 id="arrayadd" tabindex="-1">arrayAdd</h3><p>\u6570\u7EC4\u7684\u6761\u4EF6\u6DFB\u52A0\uFF0C\u9ED8\u8BA4\u4F7F\u7528 <code>Object.is</code> \u5224\u65AD\u3002\u5982\u679C\u76F8\u540C\u5219\u4E0D\u6DFB\u52A0\u3002\u53EF\u4EE5\u81EA\u5B9A\u4E49\u6DFB\u52A0\u6761\u4EF6\u3002\u4E0D\u4FEE\u6539 \u539F\u6570\u7EC4\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4\u5B9E\u4F8B\u3002</p><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> arrUniAdd <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>arrayAdd<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>

<span class="token function">arrUniAdd</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3, 4, 5, 6]</span>

<span class="token function">arrUniAdd</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [1, 2, 3, 4, 0]</span>

<span class="token keyword">const</span> businessUniAdd <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>
  arrayAdd<span class="token punctuation">,</span> 
  <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>category <span class="token operator">===</span> b<span class="token punctuation">.</span>category <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>id <span class="token operator">!==</span> b<span class="token punctuation">.</span>id
<span class="token punctuation">)</span>

<span class="token function">businessUniAdd</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> category<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;black&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token punctuation">{</span> category<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;pink&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> category<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;green&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> category<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;apple&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> category<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;black&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">)</span>

<span class="token comment">// =&gt; [</span>
<span class="token comment">//  { category: 12, id: 4, name: &#39;black&#39; }, </span>
<span class="token comment">//  { category: 12, id: 5, name: &#39;pink&#39; },</span>
<span class="token comment">//  { category: 12, id: 6, name: &#39;green&#39; },</span>
<span class="token comment">// ],</span>
</code></pre><h3 id="arrayincludes" tabindex="-1">arrayIncludes</h3><p>same as <code>arrayAdd</code>. return boolean</p><h3 id="arrayremove" tabindex="-1">arrayRemove</h3><p>same as <code>arrayAdd</code>. return a new array instance</p><h3 id="arrayrepeat" tabindex="-1">arrayRepeat</h3><pre class="language-ts"><code class="language-ts"><span class="token function">arrayRepeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [0, 1, 2, 3, 4]</span>
<span class="token function">arrayRepeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;s&#39;, &#39;s&#39;, &#39;s&#39;]</span>
<span class="token function">arrayRepeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token comment">// =&gt; [0, 1, 4]</span>
</code></pre><h3 id="arraypick" tabindex="-1">arrayPick</h3><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Misha&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Huffer&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Leokk&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token function">arrayPick</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span> <span class="token comment">// =&gt; [1, 2, 3]</span>

<span class="token keyword">const</span> pickArrayName <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>arrayPick<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>

<span class="token function">pickArrayName</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;Misha&#39;, &#39;Huffer&#39;, &#39;Leokk&#39;]</span>
<span class="token function">pickArrayName</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [undefind, undefined]</span>
</code></pre><h3 id="arrayslice" tabindex="-1">arraySlice</h3><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

<span class="token function">arraySlice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [0, 1]</span>
<span class="token function">arraySlice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [0, 1, 2, 0]</span>
<span class="token function">arraySlice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [1, 2, 0]</span>
<span class="token function">arraySlice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; [2, 0, 1, 2, 0, 1, 2, 0]</span>
<span class="token function">arraySlice</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; []</span>
</code></pre><h2 id="object" tabindex="-1">Object</h2><h3 id="objecthas" tabindex="-1">objectHas</h3><h3 id="objectget" tabindex="-1">objectGet</h3><h3 id="objectgetdefaultnull" tabindex="-1">objectGetDefaultNull</h3><p>curry from \u2018objectGet\u2019</p><h3 id="reverseentries" tabindex="-1">reverseEntries</h3><h3 id="reversekeyvalue" tabindex="-1">reverseKeyValue</h3><h3 id="objecttoquery" tabindex="-1">objectToQuery</h3><h3 id="querytoobject" tabindex="-1">queryToObject</h3><h3 id="totree" tabindex="-1">toTree</h3><h3 id="flattentree" tabindex="-1">flattenTree</h3><h3 id="findtreeparent" tabindex="-1">findTreeParent</h3><h3 id="findtreeparentfromlist" tabindex="-1">findTreeParentFromList</h3><h2 id="function" tabindex="-1">Function</h2><h2 id="number" tabindex="-1">Number</h2><h3 id="formatnumber" tabindex="-1">formatNumber</h3><h3 id="formatnumbertothousand" tabindex="-1">formatNumberToThousand</h3><p>curry from <code>formatNumber</code></p><h3 id="formatnumberenum" tabindex="-1">FormatNumberEnum</h3><h3 id="softbind" tabindex="-1">softBind</h3><h2 id="string" tabindex="-1">String</h2><h3 id="stringlength" tabindex="-1">stringLength</h3><pre class="language-ts"><code class="language-ts"><span class="token function">stringLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u8463\u5B58\u745E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 3</span>
<span class="token function">stringLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u{1D11E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 1</span>
<span class="token function">stringLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u{1D306}12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 3</span>
<span class="token function">stringLength</span><span class="token punctuation">(</span><span class="token string">&quot;im dongcunrui \u5927\u961F\u957F\u{1D306}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 18</span>
</code></pre><h3 id="stringbytelength" tabindex="-1">stringByteLength</h3><pre class="language-ts"><code class="language-ts"><span class="token function">stringByteLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u8463\u5B58\u745E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 6</span>
<span class="token function">stringByteLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u{1D11E}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 3</span>
<span class="token function">stringByteLength</span><span class="token punctuation">(</span><span class="token string">&quot;\u{1D306}12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 5</span>
<span class="token function">stringByteLength</span><span class="token punctuation">(</span><span class="token string">&quot;im dongcunrui \u5927\u961F\u957F\u{1D306}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 23</span>
</code></pre><h3 id="transformletter" tabindex="-1">transformLetter</h3><ul><li><code>map</code>: \u8F6C\u6362\u7528\u5BF9\u7167\u5B57\u5178</li><li><code>flag</code>: \u66FF\u6362\u65F6\u6B63\u5219\u6240\u9075\u5B88\u7684\u89C4\u5219. \u9ED8\u8BA4<code>g</code></li></ul><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> <span class="token constant">ZH_CH_LOCALE</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;confirm&#39;</span><span class="token operator">:</span> <span class="token string">&#39;\u786E\u8BA4&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;delete&#39;</span><span class="token operator">:</span> <span class="token string">&#39;\u5220\u9664&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> translateENToCH <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>transformLetter<span class="token punctuation">,</span> <span class="token punctuation">{</span> map<span class="token operator">:</span> <span class="token constant">ZH_CH_LOCALE</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">translateENToCH</span><span class="token punctuation">(</span><span class="token string">&#39;confirm delete?&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u786E\u8BA4 \u5220\u9664?&#39;</span>
<span class="token function">translateENToCH</span><span class="token punctuation">(</span><span class="token string">&#39;confirmConfirm delete?&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u786E\u8BA4Confirm \u5220\u9664?&#39;</span>
<span class="token function">translateENToCH</span><span class="token punctuation">(</span><span class="token string">&#39;confirm delete?&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u786E\u8BA4 \u5220\u9664?&#39;</span>
<span class="token function">translateENToCH</span><span class="token punctuation">(</span><span class="token string">&#39;confirm deletedelete?&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u786E\u8BA4 \u5220\u9664\u5220\u9664?&#39;</span>

<span class="token keyword">const</span> translateENToCH <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>transformLetter<span class="token punctuation">,</span> <span class="token punctuation">{</span> map<span class="token operator">:</span> <span class="token constant">ZH_CH_LOCALE</span><span class="token punctuation">,</span> flag<span class="token operator">:</span> <span class="token string">&#39;ig&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">translateENToCH</span><span class="token punctuation">(</span><span class="token string">&#39;confirmConfirm delete?&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u786E\u8BA4\u786E\u8BA4 \u5220\u9664?&#39;</span>

</code></pre><h3 id="transformtohalfsymbol" tabindex="-1">transformToHalfSymbol</h3><p>curry from <code>transformLetter</code></p><h3 id="transformtofullsymbol" tabindex="-1">transformToFullSymbol</h3><p>curry from <code>transformLetter</code></p><h2 id="math" tabindex="-1">Math</h2><h3 id="a" tabindex="-1">a</h3><pre class="language-ts"><code class="language-ts"><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// 6</span>
<span class="token function">a</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// 20</span>
</code></pre><h3 id="c" tabindex="-1">c</h3><pre class="language-ts"><code class="language-ts"><span class="token function">c</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// 3</span>
<span class="token function">c</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// 10</span>
</code></pre><h3 id="apick" tabindex="-1">aPick</h3><p>\u6682\u672A\u6DFB\u52A0</p><pre class="language-ts"><code class="language-ts"><span class="token function">aPick</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [</span>
<span class="token comment">//   [1, 2], [1, 3], [1, 4], [1, 5], [2, 3],</span>
<span class="token comment">//   [2, 1], [3, 1], [4, 1], [5, 1], [3, 2],</span>
<span class="token comment">//   [2, 4], [2, 5], [3, 4], [3, 4], [4, 5]  </span>
<span class="token comment">//   [4, 2], [5, 2], [4, 3], [4, 3], [5, 4]  </span>
<span class="token comment">// ]</span>
</code></pre><h3 id="cpick" tabindex="-1">cPick</h3><pre class="language-ts"><code class="language-ts"><span class="token function">cPick</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [</span>
<span class="token comment">//   [1, 2], [1, 3], [1, 4], [1, 5], [2, 3],</span>
<span class="token comment">//   [2, 4], [2, 5], [3, 4], [3, 4], [4, 5]  </span>
<span class="token comment">// ]</span>
</code></pre><h2 id="process" tabindex="-1">Process</h2><h3 id="microdelay" tabindex="-1">microDelay</h3><pre class="language-ts"><code class="language-ts">
<span class="token keyword">let</span> execTimes <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">const</span> microDelayFunc <span class="token operator">=</span> <span class="token function">microDelay</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> execTimes<span class="token operator">++</span><span class="token punctuation">)</span>

<span class="token function">microDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">microDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">microDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// execTimes =&gt; 0</span>

<span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// execTimes =&gt; 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// execTimes =&gt; 0 (!)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><h3 id="macrodelay" tabindex="-1">macroDelay</h3><pre class="language-ts"><code class="language-ts">
<span class="token keyword">let</span> execTimes <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">const</span> macroDelayFunc <span class="token operator">=</span> <span class="token function">macroDelay</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> execTimes<span class="token operator">++</span><span class="token punctuation">)</span>

<span class="token function">macroDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">macroDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">macroDelayFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// execTimes =&gt; 0</span>

<span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// execTimes =&gt; 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// execTimes =&gt; 1 (!)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><h3 id="delay" tabindex="-1">delay</h3><pre class="language-ts"><code class="language-ts"></code></pre><h3 id="debounce" tabindex="-1">debounce</h3><pre class="language-ts"><code class="language-ts"></code></pre><h3 id="throttle" tabindex="-1">throttle</h3><pre class="language-ts"><code class="language-ts"></code></pre><h2 id="dom" tabindex="-1">DOM</h2><h3 id="copytoclipboard" tabindex="-1">copyToClipBoard</h3><pre class="language-js"><code class="language-js"><span class="token function">copyToClipBoard</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u5F88\u5E05!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// copy success</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// copy failure</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><h3 id="download" tabindex="-1">download</h3><h3 id="downloadasfile" tabindex="-1">downloadAsFile</h3><h3 id="downloadascsv" tabindex="-1">downloadAsCsv</h3><h3 id="downloaddataurl" tabindex="-1">downloadDataurl</h3><h3 id="getoffset" tabindex="-1">getOffset</h3><ul><li><code>left</code>: \u8DDD\u79BB\u6307\u5B9A\u8DDF\u5143\u7D20\u7684\u5DE6\u8FB9\u8DDD\uFF0C\u7D2F\u52A0 <code>offsetLeft</code></li><li><code>top</code>: \u8DDD\u79BB\u6307\u5B9A\u8DDF\u5143\u7D20\u7684\u5DE6\u8FB9\u8DDD\uFF0C\u7D2F\u52A0 <code>offsetTop</code></li><li><code>width</code>: \u5143\u7D20\u81EA\u8EAB <code>offsetWidth</code></li><li><code>height</code>: \u5143\u7D20\u81EA\u8EAB <code>offsetHeight</code></li></ul><pre class="language-ts"><code class="language-ts"><span class="token function">getOffset</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> buttonDom<span class="token punctuation">)</span>

<span class="token comment">// =&gt; { left: 120, top: 500, width: 120, height: 30 }</span>
</code></pre><h3 id="getoffsetfrombody" tabindex="-1">getOffsetFromBody</h3><p>curry from <code>getOffset</code></p><pre class="language-ts"><code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">const</span> getOffsetFromBody <span class="token operator">=</span> <span class="token function">curry</span><span class="token punctuation">(</span>getOffset<span class="token punctuation">,</span> document<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
</code></pre><h2 id="const" tabindex="-1">Const</h2><p>export some const</p><ul><li><code>CHILDREN = &#39;children&#39;</code></li><li><code>CHILD = &#39;child&#39;</code></li><li><code>PARENT = &#39;parent&#39;</code></li><li><code>ID = &#39;id&#39;</code></li><li><code>PID = &#39;pid&#39;</code></li></ul>`,128),c=[e],m=[],g={setup(l,{expose:n}){return n({frontmatter:{meta:[]}}),a({meta:[]}),(r,k)=>(s(),t("div",o,c))}};export{g as default,m as meta};
